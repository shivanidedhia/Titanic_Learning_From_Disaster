if (stock_cost <= 90 || stock_cost >= 120 || stock_cost == 30){
current_profit <- stock_cost - buying_price
break
}
}
simulations_profit <- simulations_profit + current_profit
}
# mean net profit
simulations_profit/10000
print(paste0("Net Profit is $", round(simulations_profit,2), " which is ~ + $2.26 in every iteration"))
mean_profit <- 0
buying_price <- 100
simulations_profit <- 0
current_profit <- 0
sell_below_90 <- 90
sell_above_120 <- 120
for(m in 1:10000){
stock <- stock_price()
for (stock_cost in stock[1:30]) {
if (stock_cost <= 90 || stock_cost >= 120 || stock_cost == 30){
current_profit <- stock_cost - buying_price
break
}
}
simulations_profit <- simulations_profit + current_profit
}
# mean net profit
simulations_profit/10000
print(paste0("Net Profit is $", round(simulations_profit,2), " which is ~ + $2.26 in every iteration"))
mean_profit <- 0
buying_price <- 100
simulations_profit <- 0
current_profit <- 0
sell_below_90 <- 90
sell_above_120 <- 120
for(m in 1:10000){
stock <- stock_price()
for (stock_cost in stock[1:30]) {
if (stock_cost <= 90 || stock_cost >= 120 || stock_cost == 30){
current_profit <- stock_cost - buying_price
break
}
}
simulations_profit <- simulations_profit + current_profit
}
# mean net profit
simulations_profit/10000
print(paste0("Net Profit is $", round(simulations_profit,2), " which is ~ + $2.26 in every iteration"))
library(ggplot2)
library(stringr)
# Load raw data
train <- read.csv("train.csv",header = TRUE)
test <- read.csv("test.csv",header = TRUE)
# Adding "survived variable" to the test data
test.survived <- data.frame(survived = rep("None", nrow(test)), test[,])
# Combine data sets
data.combined <- rbind(train, test.survived)
# Structure of the dataset
str(data.combined)
# p class is the class of ticket for a passagener which is not a int.
# 1 is First Class, 2 is Second Class and 3 is Third
data.combined$pclass <- as.factor(data.combined$pclass)
# 1 means survived and 0 means didn't survive
data.combined$survived <- as.factor(data.combined$survived)
# How many people survived?
table(data.combined$survived) # 549 passed away and 342 survived
# What was the distribution across classes?
table(data.combined$pclass) # More people are in third class.
# How many people survived by class ?
train$pclass <- as.factor(train$pclass)
ggplot(train, aes(x = pclass, fill = factor(survived))) +
geom_bar() +
xlab("Pclass") +
ylab("Total Count") +
labs(fill = "Survived")
# People in 1st class survived more than people in the 3rd class.
# Possibly since the 1st class passengers are closer to the lifeboats.
# 'names' is not a factor so converted it to character
head(as.character(train$name))
# How many unique names are there across both train & test?
length(unique(as.character(data.combined$name)))
## two duplicate names
# How many unique names are there across both train & test?
length(unique(as.character(data.combined$name)))
# First, get the duplicate names and store them as a vector
dup.names <- as.character(data.combined[which(duplicated(as.character(data.combined$name))), "name"])
# Next, take a look at the records in the combined data set
data.combined[which(data.combined$name %in% dup.names),]
# None of the names are duplicated as they are different people
# Pattern with Misses
misses <- data.combined[which(str_detect(data.combined$name, "Miss.")),]
misses[1:5,]
# Pattern with Mrses
mrses <- data.combined[which(str_detect(data.combined$name, "Mrs.")), ]
mrses[1:5,]
# Pattern with Males
males <- data.combined[which(data.combined$sex == "male"), ]
males[1:5,]
# Expand upon the realtionship between `Survived` and `Pclass` by adding the new `Title` variable to the
# data set and then explore a potential 3-dimensional relationship.
# Create a utility function to help with title extraction
# NOTE - Using the grep function here, but could have used the str_detect function as well.
extractTitle <- function(name) {
name <- as.character(name)
if (length(grep("Miss.", name)) > 0) {
return ("Miss.")
} else if (length(grep("Master.", name)) > 0) {
return ("Master.")
} else if (length(grep("Mrs.", name)) > 0) {
return ("Mrs.")
} else if (length(grep("Mr.", name)) > 0) {
return ("Mr.")
} else {
return ("Other")
}
}
# NOTE - The code below uses a for loop which is not a very R way of
#        doing things
titles <- NULL
for (i in 1:nrow(data.combined)) {
titles <- c(titles, extractTitle(data.combined[i,"name"]))
}
data.combined$title <- as.factor(titles)
# Since we only have survived lables for the train set, only use the
# first 891 rows
ggplot(data.combined[1:891,], aes(x = title, fill = survived)) +
geom_bar() +
facet_wrap(~pclass) +
ggtitle("Pclass") +
xlab("Title") +
ylab("Total Count") +
labs(fill = "Survived")
setwd("~/Documents/Github/Titanic_Learning_From_Disaster/Titanic_Data")
library(ggplot2)
library(stringr)
# Load raw data
train <- read.csv("train.csv",header = TRUE)
test <- read.csv("test.csv",header = TRUE)
# Adding "survived variable" to the test data
test.survived <- data.frame(survived = rep("None", nrow(test)), test[,])
# Combine data sets
data.combined <- rbind(train, test.survived)
# Structure of the dataset
str(data.combined)
# p class is the class of ticket for a passagener which is not a int.
# 1 is First Class, 2 is Second Class and 3 is Third
data.combined$pclass <- as.factor(data.combined$pclass)
# 1 means survived and 0 means didn't survive
data.combined$survived <- as.factor(data.combined$survived)
# How many people survived?
table(data.combined$survived) # 549 passed away and 342 survived
# What was the distribution across classes?
table(data.combined$pclass) # More people are in third class.
# How many people survived by class ?
train$pclass <- as.factor(train$pclass)
ggplot(train, aes(x = pclass, fill = factor(survived))) +
geom_bar() +
xlab("Pclass") +
ylab("Total Count") +
labs(fill = "Survived")
# People in 1st class survived more than people in the 3rd class.
# Possibly since the 1st class passengers are closer to the lifeboats.
# 'names' is not a factor so converted it to character
head(as.character(train$name))
# How many unique names are there across both train & test?
length(unique(as.character(data.combined$name)))
## two duplicate names
# How many unique names are there across both train & test?
length(unique(as.character(data.combined$name)))
# First, get the duplicate names and store them as a vector
dup.names <- as.character(data.combined[which(duplicated(as.character(data.combined$name))), "name"])
# Next, take a look at the records in the combined data set
data.combined[which(data.combined$name %in% dup.names),]
# None of the names are duplicated as they are different people
# Pattern with Misses
misses <- data.combined[which(str_detect(data.combined$name, "Miss.")),]
misses[1:5,]
# Pattern with Mrses
mrses <- data.combined[which(str_detect(data.combined$name, "Mrs.")), ]
mrses[1:5,]
# Pattern with Males
males <- data.combined[which(data.combined$sex == "male"), ]
males[1:5,]
# Expand upon the realtionship between `Survived` and `Pclass` by adding the new `Title` variable to the
# data set and then explore a potential 3-dimensional relationship.
# Create a utility function to help with title extraction
# NOTE - Using the grep function here, but could have used the str_detect function as well.
extractTitle <- function(name) {
name <- as.character(name)
if (length(grep("Miss.", name)) > 0) {
return ("Miss.")
} else if (length(grep("Master.", name)) > 0) {
return ("Master.")
} else if (length(grep("Mrs.", name)) > 0) {
return ("Mrs.")
} else if (length(grep("Mr.", name)) > 0) {
return ("Mr.")
} else {
return ("Other")
}
}
# NOTE - The code below uses a for loop which is not a very R way of
#        doing things
titles <- NULL
for (i in 1:nrow(data.combined)) {
titles <- c(titles, extractTitle(data.combined[i,"name"]))
}
data.combined$title <- as.factor(titles)
# Since we only have survived lables for the train set, only use the
# first 891 rows
ggplot(data.combined[1:891,], aes(x = title, fill = survived)) +
geom_bar() +
facet_wrap(~pclass) +
ggtitle("Pclass") +
xlab("Title") +
ylab("Total Count") +
labs(fill = "Survived")
# Continuation from the Understanding the Data
# Distribution of males and females
table(data.combined$sex)
# Relationship between sex, pclass, and survival
ggplot(data.combined[1:891,], aes(x = sex, fill = survived)) +
geom_bar() +
facet_wrap(~pclass) +
ggtitle("Pclass") +
xlab("Sex") +
ylab("Total Count") +
labs(fill = "Survived")
# Males were far more likely to survive compared to females, 2:1 ratio for survival
# Third Passenger Class died more than First and Second Class
# Distribution of Age
# 263 NA's in the age col.
summary(data.combined$age)
# 177 NA's if 891 rows are considered from the training.
# More than half NA's are in the training datasets
summary(data.combined[1:891,"age"])
# Males in 3rd class over the age of 45 have not survived.
# Younger males in 2nd class have survived
ggplot(data.combined[1:891,], aes(x = age, fill = survived)) +
facet_wrap(~sex + pclass) +
geom_histogram(binwidth = 10) +
xlab("Age") +
ylab("Total Count") +
ggtitle("Survival by Class and Gender")
# Check for NA's to use as proxy for the missing values in age
boys <- data.combined[which(data.combined$title == "Master."),]
summary(boys$age)
# Most Misses are adult as per the distribution. Age has 50 NA's.
misses <- data.combined[which(data.combined$title == "Miss."),]
summary(misses$age)
# Younger Miss between 15 to 40 survived compared to older Miss in First Class
ggplot(misses[misses$survived != "None",], aes(x = age, fill = survived)) +
facet_wrap(~pclass) +
geom_histogram(binwidth = 5) +
ggtitle("'Miss' Age by Pclass") +
xlab("Age") +
ylab("Total Count")
misses.alone <- misses[which(misses$sibsp == 0 & misses$parch == 0),]
summary(misses.alone$age)
length(which(misses.alone$age <= 14.5))
# Understanding the Sibsp variable
summary(data.combined$sibsp)
# 7 unique values so it can converted to factor
length(unique(data.combined$sibsp))
data.combined$sibsp <- as.factor(data.combined$sibsp)
ggplot(data.combined[1:891,], aes(x = sibsp, fill = survived)) +
geom_bar() +
facet_wrap(~pclass + title) +
ggtitle("Pclass, Title") +
xlab("SibSp") +
ylab("Total Count") +
ylim(0,300) +
labs(fill = "Survived")
ggplot(data.combined[1:891,], aes(x = parch, fill = survived)) +
geom_bar() +
facet_wrap(~pclass + title) +
ggtitle("Pclass, Title") +
xlab("ParCh") +
ylab("Total Count") +
ylim(0,300) +
labs(fill = "Survived")
temp.sibsp <- c(train$sibsp, test$sibsp)
temp.parch <- c(train$parch, test$parch)
data.combined$family.size <- as.factor(temp.sibsp + temp.parch + 1)
# Create a family size
temp.sibsp <- c(train$sibsp, test$sibsp)
temp.parch <- c(train$parch, test$parch)
data.combined$family.size <- as.factor(temp.sibsp + temp.parch + 1)
ggplot(data.combined[1:891,], aes(x = family.size, fill = survived)) +
geom_bar() +
facet_wrap(~pclass + title) +
ggtitle("Family Size Survival Rates with Pclass, Title") +
xlab("family.size") +
ylab("Total Count") +
ylim(0,300) +
labs(fill = "Survived")
str(data.combined$ticket)
str(data.combined)
data.combined$ticket[1:20]
ticket.first.char <- ifelse(data.combined$ticket == "", " ", substr(data.combined$ticket, 1, 1))
unique(ticket.first.char)
data.combined$ticket.first.char <- as.factor(ticket.first.char)
ggplot(data.combined[1:891,], aes(x = ticket.first.char, fill = survived)) +
geom_bar() +
ggtitle("Survivability by ticket.first.char") +
xlab("ticket.first.char") +
ylab("Total Count") +
ylim(0,350) +
labs(fill = "Survived")
ggplot(data.combined[1:891,], aes(x = ticket.first.char, fill = survived)) +
geom_bar() +
facet_wrap(~pclass) +
ggtitle("Pclass") +
xlab("ticket.first.char") +
ylab("Total Count") +
ylim(0,300) +
labs(fill = "Survived")
ggplot(data.combined[1:891,], aes(x = ticket.first.char, fill = survived)) +
geom_bar() +
facet_wrap(~pclass + title) +
ggtitle("Pclass, Title") +
xlab("ticket.first.char") +
ylab("Total Count") +
ylim(0,200) +
labs(fill = "Survived")
ggplot(data.combined[1:891,], aes(x = ticket.first.char, fill = survived)) +
geom_bar() +
facet_wrap(~pclass + title) +
ggtitle("Pclass, Title") +
xlab("ticket.first.char") +
ylab("Total Count") +
ylim(0,200) +
labs(fill = "Survived")
#
ggplot(data.combined[1:891,], aes(x = ticket.first.char, fill = survived)) +
geom_bar() +
facet_wrap(~pclass) +
ggtitle("Tickets first character with Pclass") +
xlab("ticket.first.char") +
ylab("Total Count") +
ylim(0,300) +
labs(fill = "Survived")
summary(data.combined$fare)
length(unique(data.combined$fare))
# Can't make fare a factor, treat as numeric & visualize with histogram
ggplot(data.combined, aes(x = fare)) +
geom_histogram(binwidth = 5) +
ggtitle("Combined Fare Distribution") +
xlab("Fare") +
ylab("Total Count") +
ylim(0,200)
# Let's check to see if fare has predictive power
ggplot(data.combined[1:891,], aes(x = fare, fill = survived)) +
geom_histogram(binwidth = 5) +
facet_wrap(~pclass + title) +
ggtitle("Pclass, Title") +
xlab("fare") +
ylab("Total Count") +
ylim(0,50) +
labs(fill = "Survived")
# Let's check to see if fare has predictive power
ggplot(data.combined[1:891,], aes(x = fare, fill = survived)) +
geom_histogram(binwidth = 5) +
facet_wrap(~pclass) +
ggtitle("Pclass, Title") +
xlab("fare") +
ylab("Total Count") +
ylim(0,50) +
labs(fill = "Survived")
# Fare with passenger class
ggplot(data.combined[1:891,], aes(x = fare, fill = survived)) +
geom_histogram(binwidth = 50) +
facet_wrap(~pclass) +
ggtitle("Fare by Passenger Class") +
xlab("fare") +
ylab("Total Count") +
ylim(0,50) +
labs(fill = "Survived")
# Understanding the fare variable
summary(data.combined$fare)
# Visualize fare with histogram
ggplot(data.combined, aes(x = fare)) +
geom_histogram(binwidth = 5) +
ggtitle("Combined Fare Distribution") +
xlab("Fare") +
ylab("Total Count") +
ylim(0,200)
haracter with Pclass, Title") +
xlab("ticket.first.char") +
ylab("Total Count") +
ylim(0,200) +
labs(fill = "Survived")
# Understanding the fare variable
summary(data.combined$fare)
length(unique(data.combined$fare))
# Visualize fare with histogram
ggplot(data.combined, aes(x = fare)) +
geom_histogram(binwidth = 5) +
ggtitle("Combined Fare Distribution") +
xlab("Fare") +
ylab("Total Count") +
ylim(0,200)
# Fare with passenger class
ggplot(data.combined[1:891,], aes(x = fare, fill = survived)) +
geom_histogram(binwidth = 50) +
facet_wrap(~pclass) +
ggtitle("Fare by Passenger Class") +
xlab("fare") +
ylab("Total Count") +
ylim(0,50) +
labs(fill = "Survived")
# Understanding the cabin variable
str(data.combined$cabin)
# Cabin really isn't a factor, make a string and the display first 100
data.combined$cabin <- as.character(data.combined$cabin)
data.combined$cabin[1:100]
# Replace empty cabins with a "U"
data.combined[which(data.combined$cabin == ""), "cabin"] <- "U"
data.combined$cabin[1:100]
# Take a look at just the first char as a factor
cabin.first.char <- as.factor(substr(data.combined$cabin, 1, 1))
str(cabin.first.char)
levels(cabin.first.char)
# Understanding the cabin variable
str(data.combined$cabin)
# Cabin really isn't a factor, make a string and the display first 100
data.combined$cabin <- as.character(data.combined$cabin)
data.combined$cabin[1:100]
# Replace empty cabins with a "U"
data.combined[which(data.combined$cabin == ""), "cabin"] <- "U"
# Replace empty cabins with a "U"
data.combined[which(data.combined$cabin == ""), "cabin"] <- "U"
data.combined$cabin[1:100]
# Take a look at just the first char as a factor
cabin.first.char <- as.factor(substr(data.combined$cabin, 1, 1))
str(cabin.first.char)
levels(cabin.first.char)
# First character of cabin
cabin.first.char <- as.factor(substr(data.combined$cabin, 1, 1))
str(cabin.first.char)
levels(cabin.first.char)
# Add to combined data set and plot
data.combined$cabin.first.char <- cabin.first.char
# High level plot
ggplot(data.combined[1:891,], aes(x = cabin.first.char, fill = survived)) +
geom_bar() +
ggtitle("Survivability by cabin.first.char") +
xlab("cabin.first.char") +
ylab("Total Count") +
ylim(0,750) +
labs(fill = "Survived")
# Does this feature improve upon pclass + title?
ggplot(data.combined[1:891,], aes(x = cabin.first.char, fill = survived)) +
geom_bar() +
facet_wrap(~pclass + title) +
ggtitle("Pclass, Title") +
xlab("cabin.first.char") +
ylab("Total Count") +
ylim(0,500) +
labs(fill = "Survived")
# What about passengers with multiple cabins?
data.combined$cabin.multiple <- as.factor(ifelse(str_detect(data.combined$cabin, " "), "Y", "N"))
# Does survivability depend on where you got onboard the Titanic?
str(data.combined$embarked)
levels(data.combined$embarked)
as.factor(data.combined$embarked)
as.factor(data.combined$embarked)[1:10]
# Plot data for analysis
ggplot(data.combined[1:891,], aes(x = embarked, fill = survived)) +
geom_bar() +
facet_wrap(~pclass + title) +
ggtitle("Pclass, Title") +
xlab("embarked") +
ylab("Total Count") +
ylim(0,300) +
labs(fill = "Survived")
# Plot data for analysis
ggplot(data.combined[1:891,], aes(x = embarked, fill = survived)) +
geom_bar() +
facet_wrap(~pclass + cabin) +
ggtitle("Pclass, Title") +
xlab("embarked") +
ylab("Total Count") +
ylim(0,300) +
labs(fill = "Survived")
# Plot data for analysis
ggplot(data.combined[1:891,], aes(x = embarked, fill = survived)) +
geom_bar() +
facet_wrap(~pclass + fare) +
ggtitle("Pclass, Title") +
xlab("embarked") +
ylab("Total Count") +
ylim(0,300) +
labs(fill = "Survived")
# Plot data for analysis
ggplot(data.combined[1:891,], aes(x = embarked, fill = survived)) +
geom_bar() +
facet_wrap(~pclass + title) +
ggtitle("Pclass, Title") +
xlab("embarked") +
ylab("Total Count") +
ylim(0,300) +
labs(fill = "Survived")
# Plot data for analysis
ggplot(data.combined[1:891,], aes(x = embarked, fill = survived)) +
geom_bar() +
facet_wrap(~pclass + title) +
ggtitle("Embarked Variable with Pclass and Title") +
xlab("embarked") +
ylab("Total Count") +
ylim(0,300) +
labs(fill = "Survived")
